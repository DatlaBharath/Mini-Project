{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "VerifiedHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "hashValue",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_username",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "addCandidateUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_username",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "addRecruiterUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "arrHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "candidate",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "add",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_username",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "candidateValidate",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_docName",
          "type": "string"
        }
      ],
      "name": "documentPush",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getArray",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "docName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "docId",
              "type": "string"
            }
          ],
          "internalType": "struct Ebv.document[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCandidate",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "add",
              "type": "address"
            }
          ],
          "internalType": "struct Ebv.user[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getNonVerifiedDocuments",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "docName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "docId",
              "type": "string"
            }
          ],
          "internalType": "struct Ebv.document[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getToBeVerified",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getVerifiedDocuments",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "docName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "docId",
              "type": "string"
            }
          ],
          "internalType": "struct Ebv.document[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_docName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_docId",
          "type": "string"
        }
      ],
      "name": "hashArray",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_hash",
          "type": "bytes32"
        }
      ],
      "name": "hashVerify",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_ownerName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_username",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "ownerValidate",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "recruiter",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "add",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_username",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "recruiterValidate",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_docName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_docId",
          "type": "string"
        }
      ],
      "name": "uplodeCandidateDocument",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "userData",
      "outputs": [
        {
          "internalType": "string",
          "name": "docName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "docId",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x64d922545a823fc300c38c92e866b8bd5bd6fe6642cb922bf960c6cc75604d74",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "2440217",
    "logsBloom": "0x
    "blockHash": "0xde9f192cdacbd7f0d2031b64caa6ce2be1a2769aa899045114f81121c499eee1",
    "transactionHash": "0x64d922545a823fc300c38c92e866b8bd5bd6fe6642cb922bf960c6cc75604d74",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "2440217",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "e1d1e9a0c7c96757a21dd64281bbcf29",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"VerifiedHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"hashValue\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_username\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addCandidateUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_username\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addRecruiterUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"arrHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"candidate\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"add\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_username\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"candidateValidate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_docName\",\"type\":\"string\"}],\"name\":\"documentPush\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getArray\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"docName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"docId\",\"type\":\"string\"}],\"internalType\":\"struct Ebv.document[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCandidate\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"add\",\"type\":\"address\"}],\"internalType\":\"struct Ebv.user[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getNonVerifiedDocuments\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"docName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"docId\",\"type\":\"string\"}],\"internalType\":\"struct Ebv.document[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getToBeVerified\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getVerifiedDocuments\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"docName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"docId\",\"type\":\"string\"}],\"internalType\":\"struct Ebv.document[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_docName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_docId\",\"type\":\"string\"}],\"name\":\"hashArray\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"}],\"name\":\"hashVerify\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_ownerName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_username\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"ownerValidate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"recruiter\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"add\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_username\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"recruiterValidate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_docName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_docId\",\"type\":\"string\"}],\"name\":\"uplodeCandidateDocument\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userData\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"docName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"docId\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Ebv.sol\":\"Ebv\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Ebv.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\ncontract Ebv {\\r\\n    // user Object Create chestadha Account create Chesinpidu deni Object lo store Avutdhi\\r\\n    struct user {\\r\\n        string name;\\r\\n        address add;\\r\\n    }\\r\\n    // Document Object Create chestadha Document Uplode Chesinpidu deni Object lo store Avutdhi\\r\\n    struct document{\\r\\n        string docName;\\r\\n        string docId; \\r\\n    }\\r\\n    // Endulo andari push chesina documents Hash untai. verify ipoinvatiki true avanivatiki false\\r\\n    struct verifyStat{\\r\\n        bytes32 hashValue;\\r\\n        bool status;\\r\\n    }\\r\\n    \\r\\n    mapping(address => document[]) public userData; // Ex: userData[siva' metamask  Address] = shiva uplode chesina ani documents objects oka array estadi\\r\\n    \\r\\n    // edhi pi ex lo chesina pani chestadhi address estam vathi docuuments estadhi\\r\\n    function getArray(address _address) public view returns(document[] memory){\\r\\n        return userData[_address];\\r\\n    }\\r\\n\\r\\n    address immutable public i_owner;\\r\\n    string public i_ownerName = \\\"bharath\\\";\\r\\n    // string ipfsHash;\\r\\n    user[] public candidate; // indhulo candidate usernames and address untai\\r\\n    user[] public recruiter; // indhulo recruiter usernames and address untai\\r\\n    bytes32[] public arrHash; // owner uplode chesina hashes untai\\r\\n    verifyStat[] public VerifiedHash; // verifyStats taluka Objects untai so user owner ki push cheste indulo store avutai\\r\\n\\r\\n    constructor() {\\r\\n        i_owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    // \\\"user[] public candidate\\\" indulo ki user object push avutdhi user register iyinapudu \\r\\n    function addCandidateUser(string memory _username,address _address) public{\\r\\n        uint check = 0;\\r\\n        for(uint256 i=0;i<candidate.length;i++){\\r\\n            if(candidate[i].add == _address){\\r\\n                check = 1;\\r\\n            }\\r\\n        }\\r\\n        if(check == 0){\\r\\n            candidate.push(user(_username,_address));\\r\\n        }\\r\\n    }\\r\\n    // \\\"user[] public recruiter\\\" indulo ki user object push avutdhi user register iyinapudu\\r\\n    function addRecruiterUser(string memory _username,address _address) public{\\r\\n        uint check = 0;\\r\\n        for(uint256 i=0;i<recruiter.length;i++){\\r\\n            if(recruiter[i].add == _address){\\r\\n                check = 1;\\r\\n            }\\r\\n        }\\r\\n        if(check == 0){\\r\\n            recruiter.push(user(_username,_address));\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // candidate login validation\\r\\n    function candidateValidate(string memory _username,address _address) public view returns(bool){\\r\\n        for(uint256 i=0;i<candidate.length;i++){\\r\\n            if(candidate[i].add == _address){\\r\\n                return keccak256(abi.encodePacked(candidate[i].name)) == keccak256(abi.encodePacked(_username));\\r\\n            }\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    // Recruiter login Validation\\r\\n    function recruiterValidate(string memory _username,address _address) public view returns(bool){\\r\\n        for(uint256 i=0;i<recruiter.length;i++){\\r\\n            if(recruiter[i].add == _address){\\r\\n                return keccak256(abi.encodePacked(recruiter[i].name)) == keccak256(abi.encodePacked(_username));\\r\\n            }\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    // uploding the candidate document into this \\\"userData[msg.sender]\\\"\\r\\n    function uplodeCandidateDocument(string memory _docName, string memory _docId) public{\\r\\n        userData[msg.sender].push(document(_docName,_docId));\\r\\n    }\\r\\n\\r\\n    // storing user document hash into \\\"VerifiedHash\\\" with verification status false\\r\\n    function documentPush(string memory _docName) public {\\r\\n        uint k =0;\\r\\n        for(uint256 i=0;i<userData[msg.sender].length;i++){\\r\\n            if (keccak256(abi.encodePacked(userData[msg.sender][i].docName)) == keccak256(abi.encodePacked(_docName))){\\r\\n                for(uint256 j=0; j<VerifiedHash.length; j++){\\r\\n                    if(VerifiedHash[j].hashValue == keccak256(abi.encode(userData[msg.sender][i]))){\\r\\n                        k =1;\\r\\n                    }\\r\\n                }\\r\\n                if(k == 0){\\r\\n                    VerifiedHash.push(verifyStat(keccak256(abi.encode(userData[msg.sender][i])),false));\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // owner document hash edhi use chesi push chestadu which is used for verification\\r\\n    function hashArray(string memory _docName,string memory _docId) public ownerPower{\\r\\n        document memory doc = document(_docName,_docId);\\r\\n        arrHash.push(keccak256(abi.encode(doc)));\\r\\n    }\\r\\n\\r\\n    // Document verification of document pushed by user\\r\\n    function hashVerify(bytes32 _hash) public {\\r\\n        for(uint256 i=0;i<arrHash.length;i++){\\r\\n            if(arrHash[i] == _hash){\\r\\n                for(uint256 j=0; j<VerifiedHash.length; j++){\\r\\n                    if(VerifiedHash[j].hashValue == _hash){\\r\\n                        VerifiedHash[j].status = true;\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // owner login validation\\r\\n    function ownerValidate(string memory _username,address _address) public view returns(bool){\\r\\n        if(i_owner == _address){\\r\\n            return keccak256(abi.encodePacked(i_ownerName)) == keccak256(abi.encodePacked(_username));\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    // user verified documents retrival\\r\\n    function getVerifiedDocuments(address _address) public view returns (document[] memory) {\\r\\n        document[] memory k = getArray(_address);\\r\\n        document[] memory l = new document[](k.length);\\r\\n        uint lIndex = 0;\\r\\n        uint t = 0;\\r\\n        for (uint i = 0; i < k.length; i++) {\\r\\n            t =0;\\r\\n            for (uint j = 0; j < VerifiedHash.length; j++) {\\r\\n                if (VerifiedHash[j].hashValue == keccak256(abi.encode(k[i])) && VerifiedHash[j].status == true) {\\r\\n                    t = 1;\\r\\n                    break;\\r\\n                }\\r\\n            }\\r\\n            if (t == 1) {\\r\\n                    l[lIndex] = k[i];\\r\\n                    lIndex++;\\r\\n            }\\r\\n        }\\r\\n        assembly {\\r\\n            mstore(l, lIndex)\\r\\n        }\\r\\n        return l;\\r\\n    }\\r\\n\\r\\n    // user documents which not verified retrival\\r\\n    function getNonVerifiedDocuments(address _address) public view returns(document[] memory){\\r\\n        document[] memory k = getArray(_address);\\r\\n        document[] memory l = new document[](k.length);\\r\\n        uint lIndex = 0;\\r\\n        uint t;\\r\\n        for (uint i = 0; i < k.length; i++) {\\r\\n            t = 0;\\r\\n            for (uint j = 0; j < VerifiedHash.length; j++) {\\r\\n                if (VerifiedHash[j].hashValue == keccak256(abi.encode(k[i])) && VerifiedHash[j].status == true) {\\r\\n                    t = 1;\\r\\n                }\\r\\n            }\\r\\n            if (t == 0) {\\r\\n                    l[lIndex] = k[i];\\r\\n                    lIndex++;\\r\\n            }\\r\\n        }\\r\\n        assembly {\\r\\n            mstore(l, lIndex)\\r\\n        }\\r\\n        return l;\\r\\n    }\\r\\n\\r\\n    // user document which are pushed and not verified\\r\\n    function getToBeVerified() public view returns(bytes32[] memory){\\r\\n        bytes32[] memory l = new bytes32[](VerifiedHash.length);\\r\\n        uint lIndex = 0;\\r\\n        for (uint i = 0; i < VerifiedHash.length; i++) {\\r\\n            if (!VerifiedHash[i].status) {\\r\\n                    l[lIndex] = VerifiedHash[i].hashValue;\\r\\n                    lIndex++;\\r\\n            }\\r\\n        }\\r\\n        return l;\\r\\n    }\\r\\n    \\r\\n    function getCandidate() public view returns(user[] memory){\\r\\n        return candidate;\\r\\n    }\\r\\n    // function storePDF(string memory _ipfsHash) public {\\r\\n    //     ipfsHash = _ipfsHash;\\r\\n    // }\\r\\n    \\r\\n    // function getPDF() public view returns (string memory) {\\r\\n    //     return ipfsHash;\\r\\n    // }\\r\\n\\r\\n    // ignore this\\r\\n    modifier ownerPower(){\\r\\n        if(msg.sender == i_owner){_;}\\r\\n    }\\r\\n}\",\"keccak256\":\"0xc90618777fac5553fa2b71b9b77c6ae7d6b2c7de15ad88d56b52c6650a26d917\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040526040518060400160405280600781526020017f6268617261746800000000000000000000000000000000000000000000000000815250600190816200004a91906200030d565b503480156200005857600080fd5b503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050620003f4565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200011557607f821691505b6020821081036200012b576200012a620000cd565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620001957fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000156565b620001a1868362000156565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620001ee620001e8620001e284620001b9565b620001c3565b620001b9565b9050919050565b6000819050919050565b6200020a83620001cd565b620002226200021982620001f5565b84845462000163565b825550505050565b600090565b620002396200022a565b62000246818484620001ff565b505050565b5b818110156200026e57620002626000826200022f565b6001810190506200024c565b5050565b601f821115620002bd57620002878162000131565b620002928462000146565b81016020851015620002a2578190505b620002ba620002b18562000146565b8301826200024b565b50505b505050565b600082821c905092915050565b6000620002e260001984600802620002c2565b1980831691505092915050565b6000620002fd8383620002cf565b9150826002028217905092915050565b620003188262000093565b67ffffffffffffffff8111156200033457620003336200009e565b5b620003408254620000fc565b6200034d82828562000272565b600060209050601f83116001811462000385576000841562000370578287015190505b6200037c8582620002ef565b865550620003ec565b601f198416620003958662000131565b60005b82811015620003bf5784890151825560018201915060208501945060208101905062000398565b86831015620003df5784890151620003db601f891682620002cf565b8355505b6001600288020188555050505b505050505050565b608051612a936200041e600039600081816115e00152818161180c01526119570152612a936000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c806370218b85116100b8578063c30560961161007c578063c30560961461039c578063ce88f980146103b8578063dba6335f146103d6578063e09407dd146103f4578063e6d0621514610424578063f277905c1461044057610137565b806370218b85146102bd5780637366e8ca146102db578063776d2c4b1461030c578063bf95292a1461033c578063c0d37c701461036c57610137565b806337a38c77116100ff57806337a38c77146102065780633c05eca114610222578063479797a7146102535780634f1b55f71461028357806366dee8bc1461029f57610137565b806304dbc8041461013c5780630f925a9f14610158578063197d1612146101745780631de43c4b146101a4578063253a1425146101d5575b600080fd5b61015660048036038101906101519190611d0f565b610470565b005b610172600480360381019061016d9190611d0f565b6105d5565b005b61018e60048036038101906101899190611d6b565b61073a565b60405161019b9190611f1d565b60405180910390f35b6101be60048036038101906101b99190611f75565b610904565b6040516101cc929190611ffb565b60405180910390f35b6101ef60048036038101906101ea9190611f75565b6109e0565b6040516101fd92919061205f565b60405180910390f35b610220600480360381019061021b9190612088565b610a21565b005b61023c600480360381019061023791906120d1565b610d0d565b60405161024a929190612111565b60405180910390f35b61026d60048036038101906102689190611d6b565b610e5e565b60405161027a9190611f1d565b60405180910390f35b61029d60048036038101906102989190612148565b61101f565b005b6102a76110cd565b6040516102b4919061227e565b60405180910390f35b6102c56111d9565b6040516102d291906123ae565b60405180910390f35b6102f560048036038101906102f09190611f75565b611320565b604051610303929190611ffb565b60405180910390f35b61032660048036038101906103219190611d6b565b6113fc565b6040516103339190611f1d565b60405180910390f35b61035660048036038101906103519190611d0f565b6115c5565b60405161036391906123d0565b60405180910390f35b61038660048036038101906103819190611f75565b61167c565b60405161039391906123eb565b60405180910390f35b6103b660048036038101906103b19190612432565b6116a0565b005b6103c061177c565b6040516103cd919061245f565b60405180910390f35b6103de61180a565b6040516103eb9190612481565b60405180910390f35b61040e60048036038101906104099190611d0f565b61182e565b60405161041b91906123d0565b60405180910390f35b61043e60048036038101906104399190612148565b611955565b005b61045a60048036038101906104559190611d0f565b611a16565b60405161046791906123d0565b60405180910390f35b6000805b600380549050811015610511578273ffffffffffffffffffffffffffffffffffffffff16600382815481106104ac576104ab61249c565b5b906000526020600020906002020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036104fe57600191505b8080610509906124fa565b915050610474565b50600081036105d057600360405180604001604052808581526020018473ffffffffffffffffffffffffffffffffffffffff1681525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000019081610585919061274e565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505b505050565b6000805b600280549050811015610676578273ffffffffffffffffffffffffffffffffffffffff16600282815481106106115761061061249c565b5b906000526020600020906002020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361066357600191505b808061066e906124fa565b9150506105d9565b506000810361073557600260405180604001604052808581526020018473ffffffffffffffffffffffffffffffffffffffff16815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000190816106ea919061274e565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505b505050565b6060600061074783610e5e565b90506000815167ffffffffffffffff81111561076657610765611b86565b5b60405190808252806020026020018201604052801561079f57816020015b61078c611b3d565b8152602001906001900390816107845790505b50905060008060005b84518110156108f4576000915060005b600580549050811015610890578582815181106107d8576107d761249c565b5b60200260200101516040516020016107f09190612864565b604051602081830303815290604052805190602001206005828154811061081a5761081961249c565b5b90600052602060002090600202016000015414801561086f5750600115156005828154811061084c5761084b61249c565b5b906000526020600020906002020160010160009054906101000a900460ff161515145b1561087d5760019250610890565b8080610888906124fa565b9150506107b8565b50600182036108e1578481815181106108ac576108ab61249c565b5b60200260200101518484815181106108c7576108c661249c565b5b602002602001018190525082806108dd906124fa565b9350505b80806108ec906124fa565b9150506107a8565b5081835282945050505050919050565b6002818154811061091457600080fd5b906000526020600020906002020160009150905080600001805461093790612571565b80601f016020809104026020016040519081016040528092919081815260200182805461096390612571565b80156109b05780601f10610985576101008083540402835291602001916109b0565b820191906000526020600020905b81548152906001019060200180831161099357829003601f168201915b5050505050908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b600581815481106109f057600080fd5b90600052602060002090600202016000915090508060000154908060010160009054906101000a900460ff16905082565b6000805b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050811015610d085782604051602001610a7f91906128c2565b604051602081830303815290604052805190602001206000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610ae557610ae461249c565b5b9060005260206000209060020201600001604051602001610b06919061295c565b6040516020818303038152906040528051906020012003610cf55760005b600580549050811015610bf8576000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610b8157610b8061249c565b5b9060005260206000209060020201604051602001610b9f9190612a3b565b6040516020818303038152906040528051906020012060058281548110610bc957610bc861249c565b5b90600052602060002090600202016000015403610be557600192505b8080610bf0906124fa565b915050610b24565b5060008203610cf457600560405180604001604052806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208481548110610c5e57610c5d61249c565b5b9060005260206000209060020201604051602001610c7c9190612a3b565b6040516020818303038152906040528051906020012081526020016000151581525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010160006101000a81548160ff02191690831515021790555050505b5b8080610d00906124fa565b915050610a25565b505050565b60006020528160005260406000208181548110610d2957600080fd5b906000526020600020906002020160009150915050806000018054610d4d90612571565b80601f0160208091040260200160405190810160405280929190818152602001828054610d7990612571565b8015610dc65780601f10610d9b57610100808354040283529160200191610dc6565b820191906000526020600020905b815481529060010190602001808311610da957829003601f168201915b505050505090806001018054610ddb90612571565b80601f0160208091040260200160405190810160405280929190818152602001828054610e0790612571565b8015610e545780601f10610e2957610100808354040283529160200191610e54565b820191906000526020600020905b815481529060010190602001808311610e3757829003601f168201915b5050505050905082565b60606000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156110145783829060005260206000209060020201604051806040016040529081600082018054610ef190612571565b80601f0160208091040260200160405190810160405280929190818152602001828054610f1d90612571565b8015610f6a5780601f10610f3f57610100808354040283529160200191610f6a565b820191906000526020600020905b815481529060010190602001808311610f4d57829003601f168201915b50505050508152602001600182018054610f8390612571565b80601f0160208091040260200160405190810160405280929190818152602001828054610faf90612571565b8015610ffc5780601f10610fd157610100808354040283529160200191610ffc565b820191906000526020600020905b815481529060010190602001808311610fdf57829003601f168201915b50505050508152505081526020019060010190610ebe565b505050509050919050565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806040016040528084815260200183815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000190816110b0919061274e565b5060208201518160010190816110c6919061274e565b5050505050565b6060600060058054905067ffffffffffffffff8111156110f0576110ef611b86565b5b60405190808252806020026020018201604052801561111e5781602001602082028036833780820191505090505b5090506000805b6005805490508110156111d057600581815481106111465761114561249c565b5b906000526020600020906002020160010160009054906101000a900460ff166111bd576005818154811061117d5761117c61249c565b5b9060005260206000209060020201600001548383815181106111a2576111a161249c565b5b60200260200101818152505081806111b9906124fa565b9250505b80806111c8906124fa565b915050611125565b50819250505090565b60606002805480602002602001604051908101604052809291908181526020016000905b82821015611317578382906000526020600020906002020160405180604001604052908160008201805461123090612571565b80601f016020809104026020016040519081016040528092919081815260200182805461125c90612571565b80156112a95780601f1061127e576101008083540402835291602001916112a9565b820191906000526020600020905b81548152906001019060200180831161128c57829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050815260200190600101906111fd565b50505050905090565b6003818154811061133057600080fd5b906000526020600020906002020160009150905080600001805461135390612571565b80601f016020809104026020016040519081016040528092919081815260200182805461137f90612571565b80156113cc5780601f106113a1576101008083540402835291602001916113cc565b820191906000526020600020905b8154815290600101906020018083116113af57829003601f168201915b5050505050908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b6060600061140983610e5e565b90506000815167ffffffffffffffff81111561142857611427611b86565b5b60405190808252806020026020018201604052801561146157816020015b61144e611b3d565b8152602001906001900390816114465790505b50905060008080600090505b84518110156115b5576000915060005b6005805490508110156115515785828151811061149d5761149c61249c565b5b60200260200101516040516020016114b59190612864565b60405160208183030381529060405280519060200120600582815481106114df576114de61249c565b5b906000526020600020906002020160000154148015611534575060011515600582815481106115115761151061249c565b5b906000526020600020906002020160010160009054906101000a900460ff161515145b1561153e57600192505b8080611549906124fa565b91505061147d565b50600082036115a25784818151811061156d5761156c61249c565b5b60200260200101518484815181106115885761158761249c565b5b6020026020010181905250828061159e906124fa565b9350505b80806115ad906124fa565b91505061146d565b5081835282945050505050919050565b60008173ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1603611671578260405160200161162b91906128c2565b604051602081830303815290604052805190602001206001604051602001611653919061295c565b60405160208183030381529060405280519060200120149050611676565b600090505b92915050565b6004818154811061168c57600080fd5b906000526020600020016000915090505481565b60005b6004805490508110156117785781600482815481106116c5576116c461249c565b5b9060005260206000200154036117655760005b6005805490508110156117635782600582815481106116fa576116f961249c565b5b90600052602060002090600202016000015403611750576001600582815481106117275761172661249c565b5b906000526020600020906002020160010160006101000a81548160ff0219169083151502179055505b808061175b906124fa565b9150506116d8565b505b8080611770906124fa565b9150506116a3565b5050565b6001805461178990612571565b80601f01602080910402602001604051908101604052809291908181526020018280546117b590612571565b80156118025780601f106117d757610100808354040283529160200191611802565b820191906000526020600020905b8154815290600101906020018083116117e557829003601f168201915b505050505081565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080600090505b600280549050811015611949578273ffffffffffffffffffffffffffffffffffffffff166002828154811061186e5761186d61249c565b5b906000526020600020906002020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361193657836040516020016118cc91906128c2565b60405160208183030381529060405280519060200120600282815481106118f6576118f561249c565b5b9060005260206000209060020201600001604051602001611917919061295c565b604051602081830303815290604052805190602001201491505061194f565b8080611941906124fa565b915050611836565b50600090505b92915050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603611a1257600060405180604001604052808481526020018381525090506004816040516020016119d49190612864565b604051602081830303815290604052805190602001209080600181540180825580915050600190039060005260206000200160009091909190915055505b5050565b600080600090505b600380549050811015611b31578273ffffffffffffffffffffffffffffffffffffffff1660038281548110611a5657611a5561249c565b5b906000526020600020906002020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611b1e5783604051602001611ab491906128c2565b6040516020818303038152906040528051906020012060038281548110611ade57611add61249c565b5b9060005260206000209060020201600001604051602001611aff919061295c565b6040516020818303038152906040528051906020012014915050611b37565b8080611b29906124fa565b915050611a1e565b50600090505b92915050565b604051806040016040528060608152602001606081525090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611bbe82611b75565b810181811067ffffffffffffffff82111715611bdd57611bdc611b86565b5b80604052505050565b6000611bf0611b57565b9050611bfc8282611bb5565b919050565b600067ffffffffffffffff821115611c1c57611c1b611b86565b5b611c2582611b75565b9050602081019050919050565b82818337600083830152505050565b6000611c54611c4f84611c01565b611be6565b905082815260208101848484011115611c7057611c6f611b70565b5b611c7b848285611c32565b509392505050565b600082601f830112611c9857611c97611b6b565b5b8135611ca8848260208601611c41565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611cdc82611cb1565b9050919050565b611cec81611cd1565b8114611cf757600080fd5b50565b600081359050611d0981611ce3565b92915050565b60008060408385031215611d2657611d25611b61565b5b600083013567ffffffffffffffff811115611d4457611d43611b66565b5b611d5085828601611c83565b9250506020611d6185828601611cfa565b9150509250929050565b600060208284031215611d8157611d80611b61565b5b6000611d8f84828501611cfa565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611dfe578082015181840152602081019050611de3565b60008484015250505050565b6000611e1582611dc4565b611e1f8185611dcf565b9350611e2f818560208601611de0565b611e3881611b75565b840191505092915050565b60006040830160008301518482036000860152611e608282611e0a565b91505060208301518482036020860152611e7a8282611e0a565b9150508091505092915050565b6000611e938383611e43565b905092915050565b6000602082019050919050565b6000611eb382611d98565b611ebd8185611da3565b935083602082028501611ecf85611db4565b8060005b85811015611f0b5784840389528151611eec8582611e87565b9450611ef783611e9b565b925060208a01995050600181019050611ed3565b50829750879550505050505092915050565b60006020820190508181036000830152611f378184611ea8565b905092915050565b6000819050919050565b611f5281611f3f565b8114611f5d57600080fd5b50565b600081359050611f6f81611f49565b92915050565b600060208284031215611f8b57611f8a611b61565b5b6000611f9984828501611f60565b91505092915050565b600082825260208201905092915050565b6000611fbe82611dc4565b611fc88185611fa2565b9350611fd8818560208601611de0565b611fe181611b75565b840191505092915050565b611ff581611cd1565b82525050565b600060408201905081810360008301526120158185611fb3565b90506120246020830184611fec565b9392505050565b6000819050919050565b61203e8161202b565b82525050565b60008115159050919050565b61205981612044565b82525050565b60006040820190506120746000830185612035565b6120816020830184612050565b9392505050565b60006020828403121561209e5761209d611b61565b5b600082013567ffffffffffffffff8111156120bc576120bb611b66565b5b6120c884828501611c83565b91505092915050565b600080604083850312156120e8576120e7611b61565b5b60006120f685828601611cfa565b925050602061210785828601611f60565b9150509250929050565b6000604082019050818103600083015261212b8185611fb3565b9050818103602083015261213f8184611fb3565b90509392505050565b6000806040838503121561215f5761215e611b61565b5b600083013567ffffffffffffffff81111561217d5761217c611b66565b5b61218985828601611c83565b925050602083013567ffffffffffffffff8111156121aa576121a9611b66565b5b6121b685828601611c83565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6121f58161202b565b82525050565b600061220783836121ec565b60208301905092915050565b6000602082019050919050565b600061222b826121c0565b61223581856121cb565b9350612240836121dc565b8060005b8381101561227157815161225888826121fb565b975061226383612213565b925050600181019050612244565b5085935050505092915050565b600060208201905081810360008301526122988184612220565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6122d581611cd1565b82525050565b600060408301600083015184820360008601526122f88282611e0a565b915050602083015161230d60208601826122cc565b508091505092915050565b600061232483836122db565b905092915050565b6000602082019050919050565b6000612344826122a0565b61234e81856122ab565b935083602082028501612360856122bc565b8060005b8581101561239c578484038952815161237d8582612318565b94506123888361232c565b925060208a01995050600181019050612364565b50829750879550505050505092915050565b600060208201905081810360008301526123c88184612339565b905092915050565b60006020820190506123e56000830184612050565b92915050565b60006020820190506124006000830184612035565b92915050565b61240f8161202b565b811461241a57600080fd5b50565b60008135905061242c81612406565b92915050565b60006020828403121561244857612447611b61565b5b60006124568482850161241d565b91505092915050565b600060208201905081810360008301526124798184611fb3565b905092915050565b60006020820190506124966000830184611fec565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061250582611f3f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612537576125366124cb565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061258957607f821691505b60208210810361259c5761259b612542565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026126047fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826125c7565b61260e86836125c7565b95508019841693508086168417925050509392505050565b6000819050919050565b600061264b61264661264184611f3f565b612626565b611f3f565b9050919050565b6000819050919050565b61266583612630565b61267961267182612652565b8484546125d4565b825550505050565b600090565b61268e612681565b61269981848461265c565b505050565b5b818110156126bd576126b2600082612686565b60018101905061269f565b5050565b601f821115612702576126d3816125a2565b6126dc846125b7565b810160208510156126eb578190505b6126ff6126f7856125b7565b83018261269e565b50505b505050565b600082821c905092915050565b600061272560001984600802612707565b1980831691505092915050565b600061273e8383612714565b9150826002028217905092915050565b61275782611dc4565b67ffffffffffffffff8111156127705761276f611b86565b5b61277a8254612571565b6127858282856126c1565b600060209050601f8311600181146127b857600084156127a6578287015190505b6127b08582612732565b865550612818565b601f1984166127c6866125a2565b60005b828110156127ee578489015182556001820191506020850194506020810190506127c9565b8683101561280b5784890151612807601f891682612714565b8355505b6001600288020188555050505b505050505050565b6000604083016000830151848203600086015261283d8282611e0a565b915050602083015184820360208601526128578282611e0a565b9150508091505092915050565b6000602082019050818103600083015261287e8184612820565b905092915050565b600081905092915050565b600061289c82611dc4565b6128a68185612886565b93506128b6818560208601611de0565b80840191505092915050565b60006128ce8284612891565b915081905092915050565b600081546128e681612571565b6128f08186612886565b9450600182166000811461290b576001811461292057612953565b60ff1983168652811515820286019350612953565b612929856125a2565b60005b8381101561294b5781548189015260018201915060208101905061292c565b838801955050505b50505092915050565b600061296882846128d9565b915081905092915050565b6000815461298081612571565b61298a8186611dcf565b945060018216600081146129a557600181146129bb576129ee565b60ff1983168652811515602002860193506129ee565b6129c4856125a2565b60005b838110156129e6578154818901526001820191506020810190506129c7565b808801955050505b50505092915050565b60006040830160008084018583036000870152612a148382612973565b925050600184018583036020870152612a2d8382612973565b925050819250505092915050565b60006020820190508181036000830152612a5581846129f7565b90509291505056fea2646970667358221220d1bdb4a4eadeb5c489da73b43f673c33ac1e46c2279fe8a83ae4916d36de6deb64736f6c63430008120033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101375760003560e01c806370218b85116100b8578063c30560961161007c578063c30560961461039c578063ce88f980146103b8578063dba6335f146103d6578063e09407dd146103f4578063e6d0621514610424578063f277905c1461044057610137565b806370218b85146102bd5780637366e8ca146102db578063776d2c4b1461030c578063bf95292a1461033c578063c0d37c701461036c57610137565b806337a38c77116100ff57806337a38c77146102065780633c05eca114610222578063479797a7146102535780634f1b55f71461028357806366dee8bc1461029f57610137565b806304dbc8041461013c5780630f925a9f14610158578063197d1612146101745780631de43c4b146101a4578063253a1425146101d5575b600080fd5b61015660048036038101906101519190611d0f565b610470565b005b610172600480360381019061016d9190611d0f565b6105d5565b005b61018e60048036038101906101899190611d6b565b61073a565b60405161019b9190611f1d565b60405180910390f35b6101be60048036038101906101b99190611f75565b610904565b6040516101cc929190611ffb565b60405180910390f35b6101ef60048036038101906101ea9190611f75565b6109e0565b6040516101fd92919061205f565b60405180910390f35b610220600480360381019061021b9190612088565b610a21565b005b61023c600480360381019061023791906120d1565b610d0d565b60405161024a929190612111565b60405180910390f35b61026d60048036038101906102689190611d6b565b610e5e565b60405161027a9190611f1d565b60405180910390f35b61029d60048036038101906102989190612148565b61101f565b005b6102a76110cd565b6040516102b4919061227e565b60405180910390f35b6102c56111d9565b6040516102d291906123ae565b60405180910390f35b6102f560048036038101906102f09190611f75565b611320565b604051610303929190611ffb565b60405180910390f35b61032660048036038101906103219190611d6b565b6113fc565b6040516103339190611f1d565b60405180910390f35b61035660048036038101906103519190611d0f565b6115c5565b60405161036391906123d0565b60405180910390f35b61038660048036038101906103819190611f75565b61167c565b60405161039391906123eb565b60405180910390f35b6103b660048036038101906103b19190612432565b6116a0565b005b6103c061177c565b6040516103cd919061245f565b60405180910390f35b6103de61180a565b6040516103eb9190612481565b60405180910390f35b61040e60048036038101906104099190611d0f565b61182e565b60405161041b91906123d0565b60405180910390f35b61043e60048036038101906104399190612148565b611955565b005b61045a60048036038101906104559190611d0f565b611a16565b60405161046791906123d0565b60405180910390f35b6000805b600380549050811015610511578273ffffffffffffffffffffffffffffffffffffffff16600382815481106104ac576104ab61249c565b5b906000526020600020906002020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036104fe57600191505b8080610509906124fa565b915050610474565b50600081036105d057600360405180604001604052808581526020018473ffffffffffffffffffffffffffffffffffffffff1681525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000019081610585919061274e565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505b505050565b6000805b600280549050811015610676578273ffffffffffffffffffffffffffffffffffffffff16600282815481106106115761061061249c565b5b906000526020600020906002020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361066357600191505b808061066e906124fa565b9150506105d9565b506000810361073557600260405180604001604052808581526020018473ffffffffffffffffffffffffffffffffffffffff16815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000190816106ea919061274e565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505b505050565b6060600061074783610e5e565b90506000815167ffffffffffffffff81111561076657610765611b86565b5b60405190808252806020026020018201604052801561079f57816020015b61078c611b3d565b8152602001906001900390816107845790505b50905060008060005b84518110156108f4576000915060005b600580549050811015610890578582815181106107d8576107d761249c565b5b60200260200101516040516020016107f09190612864565b604051602081830303815290604052805190602001206005828154811061081a5761081961249c565b5b90600052602060002090600202016000015414801561086f5750600115156005828154811061084c5761084b61249c565b5b906000526020600020906002020160010160009054906101000a900460ff161515145b1561087d5760019250610890565b8080610888906124fa565b9150506107b8565b50600182036108e1578481815181106108ac576108ab61249c565b5b60200260200101518484815181106108c7576108c661249c565b5b602002602001018190525082806108dd906124fa565b9350505b80806108ec906124fa565b9150506107a8565b5081835282945050505050919050565b6002818154811061091457600080fd5b906000526020600020906002020160009150905080600001805461093790612571565b80601f016020809104026020016040519081016040528092919081815260200182805461096390612571565b80156109b05780601f10610985576101008083540402835291602001916109b0565b820191906000526020600020905b81548152906001019060200180831161099357829003601f168201915b5050505050908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b600581815481106109f057600080fd5b90600052602060002090600202016000915090508060000154908060010160009054906101000a900460ff16905082565b6000805b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050811015610d085782604051602001610a7f91906128c2565b604051602081830303815290604052805190602001206000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610ae557610ae461249c565b5b9060005260206000209060020201600001604051602001610b06919061295c565b6040516020818303038152906040528051906020012003610cf55760005b600580549050811015610bf8576000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610b8157610b8061249c565b5b9060005260206000209060020201604051602001610b9f9190612a3b565b6040516020818303038152906040528051906020012060058281548110610bc957610bc861249c565b5b90600052602060002090600202016000015403610be557600192505b8080610bf0906124fa565b915050610b24565b5060008203610cf457600560405180604001604052806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208481548110610c5e57610c5d61249c565b5b9060005260206000209060020201604051602001610c7c9190612a3b565b6040516020818303038152906040528051906020012081526020016000151581525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010160006101000a81548160ff02191690831515021790555050505b5b8080610d00906124fa565b915050610a25565b505050565b60006020528160005260406000208181548110610d2957600080fd5b906000526020600020906002020160009150915050806000018054610d4d90612571565b80601f0160208091040260200160405190810160405280929190818152602001828054610d7990612571565b8015610dc65780601f10610d9b57610100808354040283529160200191610dc6565b820191906000526020600020905b815481529060010190602001808311610da957829003601f168201915b505050505090806001018054610ddb90612571565b80601f0160208091040260200160405190810160405280929190818152602001828054610e0790612571565b8015610e545780601f10610e2957610100808354040283529160200191610e54565b820191906000526020600020905b815481529060010190602001808311610e3757829003601f168201915b5050505050905082565b60606000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156110145783829060005260206000209060020201604051806040016040529081600082018054610ef190612571565b80601f0160208091040260200160405190810160405280929190818152602001828054610f1d90612571565b8015610f6a5780601f10610f3f57610100808354040283529160200191610f6a565b820191906000526020600020905b815481529060010190602001808311610f4d57829003601f168201915b50505050508152602001600182018054610f8390612571565b80601f0160208091040260200160405190810160405280929190818152602001828054610faf90612571565b8015610ffc5780601f10610fd157610100808354040283529160200191610ffc565b820191906000526020600020905b815481529060010190602001808311610fdf57829003601f168201915b50505050508152505081526020019060010190610ebe565b505050509050919050565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806040016040528084815260200183815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000190816110b0919061274e565b5060208201518160010190816110c6919061274e565b5050505050565b6060600060058054905067ffffffffffffffff8111156110f0576110ef611b86565b5b60405190808252806020026020018201604052801561111e5781602001602082028036833780820191505090505b5090506000805b6005805490508110156111d057600581815481106111465761114561249c565b5b906000526020600020906002020160010160009054906101000a900460ff166111bd576005818154811061117d5761117c61249c565b5b9060005260206000209060020201600001548383815181106111a2576111a161249c565b5b60200260200101818152505081806111b9906124fa565b9250505b80806111c8906124fa565b915050611125565b50819250505090565b60606002805480602002602001604051908101604052809291908181526020016000905b82821015611317578382906000526020600020906002020160405180604001604052908160008201805461123090612571565b80601f016020809104026020016040519081016040528092919081815260200182805461125c90612571565b80156112a95780601f1061127e576101008083540402835291602001916112a9565b820191906000526020600020905b81548152906001019060200180831161128c57829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050815260200190600101906111fd565b50505050905090565b6003818154811061133057600080fd5b906000526020600020906002020160009150905080600001805461135390612571565b80601f016020809104026020016040519081016040528092919081815260200182805461137f90612571565b80156113cc5780601f106113a1576101008083540402835291602001916113cc565b820191906000526020600020905b8154815290600101906020018083116113af57829003601f168201915b5050505050908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b6060600061140983610e5e565b90506000815167ffffffffffffffff81111561142857611427611b86565b5b60405190808252806020026020018201604052801561146157816020015b61144e611b3d565b8152602001906001900390816114465790505b50905060008080600090505b84518110156115b5576000915060005b6005805490508110156115515785828151811061149d5761149c61249c565b5b60200260200101516040516020016114b59190612864565b60405160208183030381529060405280519060200120600582815481106114df576114de61249c565b5b906000526020600020906002020160000154148015611534575060011515600582815481106115115761151061249c565b5b906000526020600020906002020160010160009054906101000a900460ff161515145b1561153e57600192505b8080611549906124fa565b91505061147d565b50600082036115a25784818151811061156d5761156c61249c565b5b60200260200101518484815181106115885761158761249c565b5b6020026020010181905250828061159e906124fa565b9350505b80806115ad906124fa565b91505061146d565b5081835282945050505050919050565b60008173ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1603611671578260405160200161162b91906128c2565b604051602081830303815290604052805190602001206001604051602001611653919061295c565b60405160208183030381529060405280519060200120149050611676565b600090505b92915050565b6004818154811061168c57600080fd5b906000526020600020016000915090505481565b60005b6004805490508110156117785781600482815481106116c5576116c461249c565b5b9060005260206000200154036117655760005b6005805490508110156117635782600582815481106116fa576116f961249c565b5b90600052602060002090600202016000015403611750576001600582815481106117275761172661249c565b5b906000526020600020906002020160010160006101000a81548160ff0219169083151502179055505b808061175b906124fa565b9150506116d8565b505b8080611770906124fa565b9150506116a3565b5050565b6001805461178990612571565b80601f01602080910402602001604051908101604052809291908181526020018280546117b590612571565b80156118025780601f106117d757610100808354040283529160200191611802565b820191906000526020600020905b8154815290600101906020018083116117e557829003601f168201915b505050505081565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080600090505b600280549050811015611949578273ffffffffffffffffffffffffffffffffffffffff166002828154811061186e5761186d61249c565b5b906000526020600020906002020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361193657836040516020016118cc91906128c2565b60405160208183030381529060405280519060200120600282815481106118f6576118f561249c565b5b9060005260206000209060020201600001604051602001611917919061295c565b604051602081830303815290604052805190602001201491505061194f565b8080611941906124fa565b915050611836565b50600090505b92915050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603611a1257600060405180604001604052808481526020018381525090506004816040516020016119d49190612864565b604051602081830303815290604052805190602001209080600181540180825580915050600190039060005260206000200160009091909190915055505b5050565b600080600090505b600380549050811015611b31578273ffffffffffffffffffffffffffffffffffffffff1660038281548110611a5657611a5561249c565b5b906000526020600020906002020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611b1e5783604051602001611ab491906128c2565b6040516020818303038152906040528051906020012060038281548110611ade57611add61249c565b5b9060005260206000209060020201600001604051602001611aff919061295c565b6040516020818303038152906040528051906020012014915050611b37565b8080611b29906124fa565b915050611a1e565b50600090505b92915050565b604051806040016040528060608152602001606081525090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611bbe82611b75565b810181811067ffffffffffffffff82111715611bdd57611bdc611b86565b5b80604052505050565b6000611bf0611b57565b9050611bfc8282611bb5565b919050565b600067ffffffffffffffff821115611c1c57611c1b611b86565b5b611c2582611b75565b9050602081019050919050565b82818337600083830152505050565b6000611c54611c4f84611c01565b611be6565b905082815260208101848484011115611c7057611c6f611b70565b5b611c7b848285611c32565b509392505050565b600082601f830112611c9857611c97611b6b565b5b8135611ca8848260208601611c41565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611cdc82611cb1565b9050919050565b611cec81611cd1565b8114611cf757600080fd5b50565b600081359050611d0981611ce3565b92915050565b60008060408385031215611d2657611d25611b61565b5b600083013567ffffffffffffffff811115611d4457611d43611b66565b5b611d5085828601611c83565b9250506020611d6185828601611cfa565b9150509250929050565b600060208284031215611d8157611d80611b61565b5b6000611d8f84828501611cfa565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611dfe578082015181840152602081019050611de3565b60008484015250505050565b6000611e1582611dc4565b611e1f8185611dcf565b9350611e2f818560208601611de0565b611e3881611b75565b840191505092915050565b60006040830160008301518482036000860152611e608282611e0a565b91505060208301518482036020860152611e7a8282611e0a565b9150508091505092915050565b6000611e938383611e43565b905092915050565b6000602082019050919050565b6000611eb382611d98565b611ebd8185611da3565b935083602082028501611ecf85611db4565b8060005b85811015611f0b5784840389528151611eec8582611e87565b9450611ef783611e9b565b925060208a01995050600181019050611ed3565b50829750879550505050505092915050565b60006020820190508181036000830152611f378184611ea8565b905092915050565b6000819050919050565b611f5281611f3f565b8114611f5d57600080fd5b50565b600081359050611f6f81611f49565b92915050565b600060208284031215611f8b57611f8a611b61565b5b6000611f9984828501611f60565b91505092915050565b600082825260208201905092915050565b6000611fbe82611dc4565b611fc88185611fa2565b9350611fd8818560208601611de0565b611fe181611b75565b840191505092915050565b611ff581611cd1565b82525050565b600060408201905081810360008301526120158185611fb3565b90506120246020830184611fec565b9392505050565b6000819050919050565b61203e8161202b565b82525050565b60008115159050919050565b61205981612044565b82525050565b60006040820190506120746000830185612035565b6120816020830184612050565b9392505050565b60006020828403121561209e5761209d611b61565b5b600082013567ffffffffffffffff8111156120bc576120bb611b66565b5b6120c884828501611c83565b91505092915050565b600080604083850312156120e8576120e7611b61565b5b60006120f685828601611cfa565b925050602061210785828601611f60565b9150509250929050565b6000604082019050818103600083015261212b8185611fb3565b9050818103602083015261213f8184611fb3565b90509392505050565b6000806040838503121561215f5761215e611b61565b5b600083013567ffffffffffffffff81111561217d5761217c611b66565b5b61218985828601611c83565b925050602083013567ffffffffffffffff8111156121aa576121a9611b66565b5b6121b685828601611c83565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6121f58161202b565b82525050565b600061220783836121ec565b60208301905092915050565b6000602082019050919050565b600061222b826121c0565b61223581856121cb565b9350612240836121dc565b8060005b8381101561227157815161225888826121fb565b975061226383612213565b925050600181019050612244565b5085935050505092915050565b600060208201905081810360008301526122988184612220565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6122d581611cd1565b82525050565b600060408301600083015184820360008601526122f88282611e0a565b915050602083015161230d60208601826122cc565b508091505092915050565b600061232483836122db565b905092915050565b6000602082019050919050565b6000612344826122a0565b61234e81856122ab565b935083602082028501612360856122bc565b8060005b8581101561239c578484038952815161237d8582612318565b94506123888361232c565b925060208a01995050600181019050612364565b50829750879550505050505092915050565b600060208201905081810360008301526123c88184612339565b905092915050565b60006020820190506123e56000830184612050565b92915050565b60006020820190506124006000830184612035565b92915050565b61240f8161202b565b811461241a57600080fd5b50565b60008135905061242c81612406565b92915050565b60006020828403121561244857612447611b61565b5b60006124568482850161241d565b91505092915050565b600060208201905081810360008301526124798184611fb3565b905092915050565b60006020820190506124966000830184611fec565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061250582611f3f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612537576125366124cb565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061258957607f821691505b60208210810361259c5761259b612542565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026126047fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826125c7565b61260e86836125c7565b95508019841693508086168417925050509392505050565b6000819050919050565b600061264b61264661264184611f3f565b612626565b611f3f565b9050919050565b6000819050919050565b61266583612630565b61267961267182612652565b8484546125d4565b825550505050565b600090565b61268e612681565b61269981848461265c565b505050565b5b818110156126bd576126b2600082612686565b60018101905061269f565b5050565b601f821115612702576126d3816125a2565b6126dc846125b7565b810160208510156126eb578190505b6126ff6126f7856125b7565b83018261269e565b50505b505050565b600082821c905092915050565b600061272560001984600802612707565b1980831691505092915050565b600061273e8383612714565b9150826002028217905092915050565b61275782611dc4565b67ffffffffffffffff8111156127705761276f611b86565b5b61277a8254612571565b6127858282856126c1565b600060209050601f8311600181146127b857600084156127a6578287015190505b6127b08582612732565b865550612818565b601f1984166127c6866125a2565b60005b828110156127ee578489015182556001820191506020850194506020810190506127c9565b8683101561280b5784890151612807601f891682612714565b8355505b6001600288020188555050505b505050505050565b6000604083016000830151848203600086015261283d8282611e0a565b915050602083015184820360208601526128578282611e0a565b9150508091505092915050565b6000602082019050818103600083015261287e8184612820565b905092915050565b600081905092915050565b600061289c82611dc4565b6128a68185612886565b93506128b6818560208601611de0565b80840191505092915050565b60006128ce8284612891565b915081905092915050565b600081546128e681612571565b6128f08186612886565b9450600182166000811461290b576001811461292057612953565b60ff1983168652811515820286019350612953565b612929856125a2565b60005b8381101561294b5781548189015260018201915060208101905061292c565b838801955050505b50505092915050565b600061296882846128d9565b915081905092915050565b6000815461298081612571565b61298a8186611dcf565b945060018216600081146129a557600181146129bb576129ee565b60ff1983168652811515602002860193506129ee565b6129c4856125a2565b60005b838110156129e6578154818901526001820191506020810190506129c7565b808801955050505b50505092915050565b60006040830160008084018583036000870152612a148382612973565b925050600184018583036020870152612a2d8382612973565b925050819250505092915050565b60006020820190508181036000830152612a5581846129f7565b90509291505056fea2646970667358221220d1bdb4a4eadeb5c489da73b43f673c33ac1e46c2279fe8a83ae4916d36de6deb64736f6c63430008120033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 22,
        "contract": "contracts/Ebv.sol:Ebv",
        "label": "userData",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_array(t_struct(document)11_storage)dyn_storage)"
      },
      {
        "astId": 41,
        "contract": "contracts/Ebv.sol:Ebv",
        "label": "i_ownerName",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 45,
        "contract": "contracts/Ebv.sol:Ebv",
        "label": "candidate",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_struct(user)6_storage)dyn_storage"
      },
      {
        "astId": 49,
        "contract": "contracts/Ebv.sol:Ebv",
        "label": "recruiter",
        "offset": 0,
        "slot": "3",
        "type": "t_array(t_struct(user)6_storage)dyn_storage"
      },
      {
        "astId": 52,
        "contract": "contracts/Ebv.sol:Ebv",
        "label": "arrHash",
        "offset": 0,
        "slot": "4",
        "type": "t_array(t_bytes32)dyn_storage"
      },
      {
        "astId": 56,
        "contract": "contracts/Ebv.sol:Ebv",
        "label": "VerifiedHash",
        "offset": 0,
        "slot": "5",
        "type": "t_array(t_struct(verifyStat)16_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_bytes32)dyn_storage": {
        "base": "t_bytes32",
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(document)11_storage)dyn_storage": {
        "base": "t_struct(document)11_storage",
        "encoding": "dynamic_array",
        "label": "struct Ebv.document[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(user)6_storage)dyn_storage": {
        "base": "t_struct(user)6_storage",
        "encoding": "dynamic_array",
        "label": "struct Ebv.user[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(verifyStat)16_storage)dyn_storage": {
        "base": "t_struct(verifyStat)16_storage",
        "encoding": "dynamic_array",
        "label": "struct Ebv.verifyStat[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_array(t_struct(document)11_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Ebv.document[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(document)11_storage)dyn_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(document)11_storage": {
        "encoding": "inplace",
        "label": "struct Ebv.document",
        "members": [
          {
            "astId": 8,
            "contract": "contracts/Ebv.sol:Ebv",
            "label": "docName",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 10,
            "contract": "contracts/Ebv.sol:Ebv",
            "label": "docId",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(user)6_storage": {
        "encoding": "inplace",
        "label": "struct Ebv.user",
        "members": [
          {
            "astId": 3,
            "contract": "contracts/Ebv.sol:Ebv",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 5,
            "contract": "contracts/Ebv.sol:Ebv",
            "label": "add",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(verifyStat)16_storage": {
        "encoding": "inplace",
        "label": "struct Ebv.verifyStat",
        "members": [
          {
            "astId": 13,
            "contract": "contracts/Ebv.sol:Ebv",
            "label": "hashValue",
            "offset": 0,
            "slot": "0",
            "type": "t_bytes32"
          },
          {
            "astId": 15,
            "contract": "contracts/Ebv.sol:Ebv",
            "label": "status",
            "offset": 0,
            "slot": "1",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "64"
      }
    }
  }
}